<!DOCTYPE html>
<HTML> 
<HEAD>
	<TITLE>Игра</TITLE>
	
	<meta charset="UTF-8">
	
<style>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	body {
		color: #FFE88A;
		background-color: #133563;
		font-family: 'Comic Sans MS', cursive;
	}

	h1 {
		font-size: 80px;
		margin-bottom: 0;
	}

	.container {
		height: 100vh;
		width: 100vw;
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
	}

	#board {
		width: 60vw;
		display: flex;
		flex-wrap: wrap;
		font-size: 100px;
		margin-top: 40px;
	}

	.box {
		height: 20vh;
		width: 20vw;
		display: flex;
		justify-content: center;
		align-items: center;
		color: #FFE88A;
	}

	#restart {
		padding: 10px 20px;
		background-color: #F3B8FF;
		border: none;
		border-radius: 20px;
		color: #133563;
		font-size: 20px;
		font-weight: bold;
		cursor: pointer;
	}
</style>
</HEAD>


<BODY>
<div class="container">
        <h1 id="heading">ИГРА</h1>
        <h2 id="strategy"></h2>
        <button id="restart">ПЕРЕЗАПУСТИТЬ</button>
        <div id="board">
            <div class="box" id="0"></div>
            <div class="box" id="1"></div>
            <div class="box" id="2"></div>
            <div class="box" id="3"></div>
            <div class="box" id="4"></div>
            <div class="box" id="5"></div>
            <div class="box" id="6"></div>
            <div class="box" id="7"></div>
            <div class="box" id="8"></div>
        </div>
    </div>
	
	
<script language="JavaScript">
	const boxes = document.querySelectorAll('.box');
	const text = document.querySelector('#heading');
	const strategy = document.querySelector('#strategy');
	const restartBtn = document.querySelector('#restart');

	const spaces = [];
	const tick_circle = 'O';
	const tick_x = 'X';
	let currentPlayer = tick_circle;

	const drawBoard = () => {
		boxes.forEach((box, i) => {
			let styleString = '';
			if (i < 3) {
				styleString += 'border-bottom: 3px solid #FFE88A;';
			}
			
			if (i % 3 === 0) {
				styleString += 'border-right: 3px solid #FFE88A;';
			}
			
			if (i % 3 === 2) {
				styleString += 'border-left: 3px solid #FFE88A;';
			}
			
			if (i > 5) {
			styleString += 'border-top: 3px solid #FFE88A;';
			}
			
			box.style = styleString;
			box.addEventListener('click', boxClicked);
		});
	};

	const boxClicked = (e) => {
		const id = e.target.id;
		console.log(e);
		if (!spaces[id]) {
			console.log(spaces[id]);
			spaces[id] = currentPlayer;
			e.target.innerText = currentPlayer;

			if (playerWon()) {
				text.innerText = `Победа ${currentPlayer}!`;
				return;
			}

			if (playerDraw()) {
				return;
			}
			currentPlayer = currentPlayer === tick_circle ? tick_x : tick_circle;
		}
	};

	const playerWon = () => {
		if (spaces[0] === currentPlayer) {
			if (spaces[1] === currentPlayer && spaces[2] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по горизонтали сверху`;
				return true;
			}
			if (spaces[3] === currentPlayer && spaces[6] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по вертикали слева`;
				return true;
			}
			if (spaces[4] === currentPlayer && spaces[8] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по диагонали`;
				return true;
			}
		}
		if (spaces[8] === currentPlayer) {
			if (spaces[2] === currentPlayer && spaces[5] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по вертикали справа`;
				return true;
			}
			if (spaces[6] === currentPlayer && spaces[7] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по горизонтали снизу`;
				return true;
			}
		}
		if (spaces[4] === currentPlayer) {
			if (spaces[1] === currentPlayer && spaces[7] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по вертикали по центру`;
				return true;
			}
			if (spaces[3] === currentPlayer && spaces[5] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по горизонтали по центру`;
				return true;
			}
			if (spaces[2] === currentPlayer && spaces[6] === currentPlayer) {
				strategy.innerText = `${currentPlayer} по диагонали`;
				return true;
			}
		}
	};

	const playerDraw = () => {
		let draw = 0;
		spaces.forEach((space, i) => {
			if (spaces[i] !== null) draw++;
		});
		if (draw === 9) {
			text.innerText = `Draw`;
			restart();
		}
	};

	const restart = () => {
		spaces.forEach((space, i) => {
			spaces[i] = null;
		});
		boxes.forEach((box) => {
			box.innerText = '';
		});
		text.innerText = `ИГРА`;
		strategy.innerText = ``;
	};
	restartBtn.addEventListener('click', restart);
	drawBoard();
</script>

</BODY>
</HTML>